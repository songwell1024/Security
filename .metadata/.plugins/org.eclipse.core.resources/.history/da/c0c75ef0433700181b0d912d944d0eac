package test;

import encryption.AESUtil;
import encryption.BytesToHex;

public class testAES {
	
	public static String toStringHex(String s) {  
	   char c[]=s.toCharArray();  
	   int n=c.length;  
	   long sum=0;  
	   for(int i=0;i<n;i++){  
	         
	       if((int)c[i]-48>9){  
	           if(c[i]=='A')  
	              sum+=10*Math.pow(16,n-i-1);  
	           else if(c[i]=='B')  
	               sum+=11*Math.pow(16,n-i-1);  
	           else if(c[i]=='C')  
	               sum+=12*Math.pow(16,n-i-1);  
	           else if(c[i]=='D')  
	               sum+=13*Math.pow(16,n-i-1);  
	           else if(c[i]=='E')  
	               sum+=14*Math.pow(16,n-i-1);  
	           else if(c[i]=='F')  
	              sum+=15*Math.pow(16,n-i-1);  
	       }  
	       else{  
	          sum+=((int)c[i]-48)*Math.pow(16,n-i-1);  
	       }  
	   }  
	   return (String)sum;
    }

	//待加密的原文
	public static final String DATA = "hi, welcome to my git area!";
	
	public static void main(String[] args) throws Exception {
		//获得密钥
		byte[] aesKey = AESUtil.initKey();
		String str = BytesToHex.fromBytesToHex(aesKey);
		System.out.println("AES 密钥 : " + Integer.parseInt(str,16));
		//加密
		byte[] encrypt = AESUtil.encryptAES(DATA.getBytes(), aesKey);
		System.out.println(DATA + " AES 加密 : " + BytesToHex.fromBytesToHex(encrypt));
		
		//解密
		byte[] plain = AESUtil.decryptAES(encrypt, aesKey);
		System.out.println(DATA + " AES 解密 : " + new String(plain));
	}
}
